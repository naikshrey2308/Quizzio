# Generated by Django 4.0.1 on 2022-03-13 17:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('User', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('subject', models.CharField(max_length=30)),
                ('marks', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('quizPic', models.ImageField(blank=True, upload_to='images/quizzes/')),
                ('creationTime', models.DateTimeField(null=True)),
                ('attempts', models.IntegerField(default=0)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.organizer')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField()),
                ('quizId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.quiz')),
                ('studentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.student')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField(default=0)),
                ('statement', models.TextField()),
                ('solution', models.TextField(blank=True)),
                ('quizId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement', models.TextField()),
                ('questionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.question')),
            ],
        ),
        migrations.CreateModel(
            name='CorrectOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optionId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='quizApp.option')),
                ('questionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.question')),
            ],
        ),
        migrations.CreateModel(
            name='AttemptedQue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField()),
                ('questionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.question')),
                ('scoreId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.score')),
            ],
        ),
        migrations.CreateModel(
            name='AttemptedOpt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isCorrect', models.BooleanField(default=False)),
                ('optionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.option')),
                ('questionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.question')),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizApp.score')),
            ],
        ),
    ]
